---
title: 计算结构优化（Compute / Scheduling）
model: GPT-5
purpose: 解决 II>1 或算子资源瓶颈，生成可执行的 pipeline/unroll/operator 共享策略
version: 1.0.0
last_updated: 2025-10-15
tags: [vitis-hls, optimize, pipeline, unroll, operator_sharing, latency]
inputs:
  - <循环代码>           # 触发 II>1 的关键循环
  - <II/时序报告>        # loop_analysis 中的 II/latency/reason
  - <资源目标>           # 例：DSP <80%，LUT <60%
  - <精度/接口约束>      # 例：需保持 ap_fixed 精度与现有接口
template: |
  你是 Vitis HLS 调度优化专家。请针对下述循环 II>1 的问题，给出可执行的调度与资源方案：
  【循环代码】：
  <循环代码>

  【II/时序报告】：
  <II/时序报告>

  【资源目标与约束】：
  <资源目标>

  任务：
  1) 分类根因：数据相关（RAW/WAR/WAW）、资源受限（DSP/BRAM port）、调度冲突（函数级/运算级）
  2) 生成多路可选方案（A/B/C），明确各自 pragma 组合与代价
  3) 给出最终推荐方案与“最小修改集”
  4) 以代码块输出可直接粘贴的 pragma patch，并标注放置位置

  输出格式（必须遵守）：
  ### 一、根因定位
  - …
  ### 二、可选方案
  - 方案A（低风险）：…
  - 方案B（资源换时序）：…
  - 方案C（结构性改造）：…
  ### 三、推荐方案与最小修改集
  ```cpp
  #pragma HLS PIPELINE II=1
  #pragma HLS UNROLL factor=<k> skip_exit_check
  #pragma HLS ALLOCATION instances=mul limit=<n> operation
  ### 四、预期影响评估
  - 资源/频率/延迟评估：
  - 验证清单（ C sim / cosim / 边界行为 ）：

  请确保输出内容简洁、专业，避免冗余信息。
  如果信息不足，请说明需要补充哪些关键点。
