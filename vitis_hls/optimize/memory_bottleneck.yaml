---
title: 访存瓶颈优化（Memory Bottleneck）
model: GPT-5
purpose: 诊断并缓解由于带宽、端口冲突、数据布局导致的 HLS 访存瓶颈
version: 1.0.0
last_updated: 2025-10-15
tags: [vitis-hls, optimize, memory, array_partition, stream, bind_storage]
inputs:
  - <代码片段>           # 仅贴关键 for 循环/数组声明/访存相关处
  - <报告片段>           # utilization_summary / loop_analysis 关键信息
  - <目标与约束>         # 例：II=1；BRAM <60%；保持接口不变
  - <设备信息>           # 可选：如 Zynq-7020 (PYNQ-Z2)
template: |
  你是一名 Vitis HLS 优化专家。以下是代码与报告摘要，请定位访存瓶颈并提出可执行的 pragma 方案：
  【代码】：
  <代码片段>

  【报告】：
  <报告片段>

  【目标与约束】：
  <目标与约束>

  请完成：
  1) 识别瓶颈归因（端口冲突/带宽不足/随机访问/读写竞争/复用开销）
  2) 给出结构改造建议（数组银行化、行/列优先布局、缓存/窗口化、streaming）
  3) 输出可直接粘贴的 pragma patch（含放置位置与简短注释）
  4) 评估对 II/BRAM/LUT/DSP 的预期影响与风险

  输出格式（必须遵守）：
  ### 一、瓶颈分析
  - 现象：
  - 归因：
  ### 二、优化策略
  - …
  ### 三、Pragma 建议（带注释）
  ```cpp
  // 在 <文件/函数/循环> 处
  #pragma HLS ARRAY_PARTITION variable=<name> <dim> <type>
  #pragma HLS BIND_STORAGE variable=<buf> type=ram_2p impl=bram
  #pragma HLS STREAM variable=<fifo> depth=<N>
