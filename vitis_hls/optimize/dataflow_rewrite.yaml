---
title: 数据流重构（Dataflow / Module Pipelining）
model: GPT-5
purpose: 将串行子阶段改造成并行流水（read→compute→write），提升吞吐并降低端到端延迟
version: 1.0.0
last_updated: 2025-10-15
tags: [vitis-hls, optimize, dataflow, fifo, task_level_pipeline]
inputs:
  - <顶层框架>           # 子函数/阶段划分：read→compute→write
  - <接口/带宽信息>      # AXI/BRAM 端口与速率
  - <环路依赖说明>       # 跨阶段依赖或共享资源
template: |
  你是 Vitis HLS 的 dataflow 设计专家。请将下述流程改造为 task-level pipeline：
  【顶层框架】：
  <顶层框架>

  【接口/带宽】：
  <接口/带宽信息>

  【依赖说明】：
  <环路依赖说明>

  任务：
  1) 进行阶段划分与并行关系识别（read/compute/write）
  2) 设计 FIFO/stream 深度与边界（避免回压/阻塞）
  3) 指定 pragma 放置点（函数/循环/数组）
  4) 给出 skeleton 代码（含 dataflow 与 channel 定义）

  输出模板（必须遵守）：
  ### 一、阶段划分与并行关系
  - …
  ### 二、通道与深度建议
  - …
  ### 三、Pragma 放置与示例
  ```cpp
  #pragma HLS DATAFLOW
  hls::stream<packet_t> s_in, s_mid, s_out;
  #pragma HLS STREAM variable=s_mid depth=<N>
  ### 四、验证与回归清单
  - 断言/边界测试/背压模拟/II 观察项：

  请确保输出内容简洁、专业，避免冗余信息。
  如果信息不足，请说明需要补充哪些关键点。